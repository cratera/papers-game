{
  "root": true,
  "env": {
    "browser": true,
    "react-native/react-native": true // whitelists all browser-like globals. https://www.npmjs.com/package/eslint-plugin-react-native
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect" // tells eslint-plugin-react to automatically detect the version of React we're using
    },
    "import/resolver": {
      "typescript": {}
    }
  },
  "plugins": ["react", "react-native", "@typescript-eslint", "prettier"],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime", // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md#when-not-to-use-it
    "plugin:react-hooks/recommended", // https://reactjs.org/docs/hooks-rules.html
    "plugin:react-native/all",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": "error", // flags prettier errors as lint errors. https://github.com/prettier/eslint-plugin-prettier#installation
    "react-native/sort-styles": "off", // we don't want to sort styles alphabetically in order to avoid bugs/unexpected behaviors
    "@typescript-eslint/no-var-requires": "off", // we need to use require() in config files
    "no-unused-vars": "off", // avoid conflicts with @typescript-eslint/no-unused-vars
    "@typescript-eslint/no-unused-vars": "error",
    "react-native/no-raw-text": "off", // TODO: check why this breaks eslint: https://github.com/Intellicode/eslint-plugin-react-native/issues/270#issuecomment-800243398
    "react/prop-types": "off" // we don't use prop-types with TypeScript
  }
}
